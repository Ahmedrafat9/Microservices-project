apiVersion: batch/v1
kind: Job
metadata:
  generateName: kubelinter-check-
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-weight: "-1"
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: kubelinter
        image: alpine:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          # Install dependencies
          apk add --no-cache git curl jq
          
          # Download kube-linter
          wget -O /tmp/kube-linter.tar.gz https://github.com/stackrox/kube-linter/releases/latest/download/kube-linter-linux.tar.gz
          tar -xzf /tmp/kube-linter.tar.gz -C /tmp/
          mv /tmp/kube-linter /usr/local/bin/
          chmod +x /usr/local/bin/kube-linter
          
          echo "📥 Cloning repository..."
          git clone https://github.com/Ahmedrafat9/Microservices-project.git /tmp/repo
          cd /tmp/repo
          
          echo "🔍 Checking kubernetes-manifests directory..."
          if [ ! -d "kubernetes-manifests" ]; then
            echo "❌ kubernetes-manifests directory not found!"
            exit 1
          fi
          
          echo "📋 Running KubeLinter checks..."
          kube-linter lint kubernetes-manifests \
            --include privileged-containers,no-liveness-probe,no-readiness-probe \
            --format json > /tmp/results.json || true
          
          # Check results
          if [ -s /tmp/results.json ] && [ "$(cat /tmp/results.json | jq '.Reports | length')" -gt 0 ]; then
            echo ""
            echo "🚨 Issues found:"
            cat /tmp/results.json | jq -r '.Reports[] | "❌ \(.Check): \(.Object.K8sObject.Kind)/\(.Object.K8sObject.Name)"'
            echo ""
            echo "💥 Deployment blocked! Fix these issues:"
            echo "   • Remove 'privileged: true' from containers"
            echo "   • Add livenessProbe to containers"
            echo "   • Add readinessProbe to containers"
            exit 1
          fi
          
          echo "✅ All checks passed!"